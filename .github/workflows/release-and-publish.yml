# .github/workflows/release-and-publish.yml
name: Release and Publish Package

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # - name: Check for existing PR
      #   id: check_pr
      #   run: |
      #     PR_EXISTS=$(gh pr list --base publish --head main --json number --jq '. | length')
      #     echo "pr_exists=$PR_EXISTS" >> $GITHUB_ENV
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create Pull Request
      #   if: env.pr_exists == '0'
      #   run: |
      #     gh pr create --base publish --head main --title "Auto PR: main to publish" --body "This PR is automatically created by a GitHub Action."
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Output PR URL
      #   if: env.pr_exists == '0'
      #   run: |
      #     PR_URL=$(gh pr view --json url --jq '.url')
      #     echo "Pull Request created: $PR_URL"
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release from package.json version (if not exists)
        run: |
          TAG_NAME="v$(jq -r .version package.json)"
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "Tag $TAG_NAME already exists. Skipping release."
            exit 0
          else
            echo "Creating release $TAG_NAME..."
            gh release create "$TAG_NAME" --title "$TAG_NAME" --notes "Release $TAG_NAME" --target main --latest
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: release # After release is created then run the second workflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js with npm
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Publish to npm
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
